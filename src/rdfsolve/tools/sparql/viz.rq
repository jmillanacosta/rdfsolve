    PREFIX sh:<http://www.w3.org/ns/shacl#>
    PREFIX sd:<http://www.w3.org/ns/sparql-service-description#>
    PREFIX void:<http://rdfs.org/ns/void#>
    PREFIX void_ext:<http://ldf.fi/void-ext#>
    SELECT DISTINCT
(IF(BOUND(?namespaceFrom), CONCAT(?prefixFrom, ":", SUBSTR(STR(?classFrom), STRLEN(STR(?namespaceFrom))+1)), ?classFrom) AS ?fromId)
?classFrom
(IF(BOUND(?namespaceToDataype), CONCAT(?prefixToDataype, ":", SUBSTR(STR(?datatypeTo), STRLEN(STR(?namespaceToDataype))+1)), ?datatypeTo) AS ?toDatatypeId)
?datatypeTo
(IF(BOUND(?namespaceToClass), CONCAT(?prefixToClass, ":", SUBSTR(STR(?classTo), STRLEN(STR(?namespaceToClass))+1)), ?classTo) AS ?toClassId)
?classTo
(IF(BOUND(?namespaceProp), CONCAT(?prefixProp, ":", SUBSTR(STR(?prop), STRLEN(STR(?namespaceProp))+1)), ?prop) AS ?propId)
?prop
(IF(BOUND(?namespaceGraph), CONCAT(?prefixGraph, ":", SUBSTR(STR(?graph), STRLEN(STR(?namespaceGraph))+1)), ?graph) AS ?graphId)
?triples
WHERE {
  {
   SELECT * 
   WHERE {
  ?s sd:graph ?graph .
  ?graph void:classPartition ?cp1 .
  ?cp1 void:class ?classFrom .
  ?cp1 void:propertyPartition ?pp1 .
  ?pp1 void:property ?prop .
  ?pp1 void:triples ?triples .
  {
    ?pp1 void_ext:datatypePartition ?cp2 .
    ?cp2 void_ext:datatype ?datatypeTo .
   
  } UNION {
    ?pp1 void:classPartition ?cp2 .
    ?cp2 void:class ?classTo .
    ?graph void:classPartition ?cp3 .
    ?cp3 void:class ?classTo .
    
}
    }
  }
    OPTIONAL{
      [] sh:namespace ?namespaceToClass ;
        sh:prefix ?prefixToClass .
    FILTER(STRSTARTS(STR(?classTo),STR(?namespaceToClass)))
  }
     OPTIONAL{
      [] sh:namespace ?namespaceToDataype ;
        sh:prefix ?prefixToDataype .
    FILTER(STRSTARTS(STR(?datatypeTo),STR(?namespaceToDataype)))
  }
OPTIONAL{
    [] sh:namespace ?namespaceFrom ;
        sh:prefix ?prefixFrom .
    FILTER(STRSTARTS(STR(?classFrom),STR(?namespaceFrom)))
}
OPTIONAL{
    [] sh:namespace ?namespaceProp ;
        sh:prefix ?prefixProp .
    FILTER(STRSTARTS(STR(?prop),STR(?namespaceProp)))
}
OPTIONAL{
    [] sh:namespace ?namespaceGraph ;
        sh:prefix ?prefixGraph.
    FILTER(STRSTARTS(STR(?graph),STR(?namespaceGraph)))
}
} ORDER BY ?classFrom ?classTo ?datatypeTo ?graph ?triples